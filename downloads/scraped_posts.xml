<?xml version='1.0' encoding='utf-8'?>
<posts><post><post_author>AutoModerator</post_author><post_id>1dromws</post_id><post_score>14</post_score><post_time>Sunday, June 30, 2024 at 3:00:07 AM GMT+3</post_time><flair_text>Daily Thread</flair_text><post_title>Sunday Daily Thread: What's everyone working on this week?</post_title><media /><post_content>Daily Thread</post_content><comments><item><author>Altruistic-Track-279</author><score>9</score><content>I had this Python Crash Course book sitting on my desk that I took from my brother in law. I finally read the first chapter and wrote a code to display a quote. I couldn&amp;apos;t get it to display the quote with the quotation marks but I was able to figure it out and I got excited. I&amp;apos;m looking forward to whatever I learn from this book.</content><replies><item><author>Ok-Frosting7364</author><score>3</score><content>Great book!</content></item></replies></item><item><author>lilbud2000</author><score>6</score><content>Been working on a web scraping project to grab information about live concerts (including setlists, and stats on songs played/other info). I had a first version but went back and realized I could do plenty of stuff better.The data was grabbed using BeautifulSoup, and after a *ton* of cleaning, was stored in an SQLite database.I&amp;apos;m also working on a Discord bot (using Discord.py) that interacts with the database. Same as above I have a first version but am planning on rewriting so it&amp;apos;s easier to maintain/add new features and commands.Currently working on switching the database to Postgres locally. I host the bot on Heroku and push the SQLite database to Postgres. I figure it would be much easier to have Postgres on both ends (least I hope anyway).</content></item><item><author>brennancurrier</author><score>5</score><content>Learning PyQt for an application idea I’ve had for months and using rust with python bindings for the more performance oriented functions within the application.It’s ultimately gonna be a texture converter for DDS, BMP, TGA and PNG files because I don’t like the currently available ones</content></item><item><author>Ok-Frosting7364</author><score>5</score><content>I just release a Python package for getting space weather data and now I&amp;apos;m focused on making a similar package but for my local library database.</content></item><item><author>autreblackschtuff</author><score>3</score><content>Working on an a tool to run OCR on video frames (or subframes) at a predefined interval. Pretty much a complete rewrite from previous effort, which was basically one big class, and using streamlit as front-end. Went away, took some classes, read some books. Now I have it setup as a generator pipeline, and thinking of putting together front-end with flet (just to try it out really).</content></item><item><author>damir_lukianenko</author><score>3</score><content>Hey guys,I&amp;apos;m a Python developer ready to help with your Python or JavaScript projects and troubleshoot any issues.I&amp;apos;m also looking for someone to practice English with, so this could be a great exchange for both of us.Feel free to write me</content></item><item><author>ace_hawk5</author><score>3</score><content>Learning how to use pandas</content></item><item><author>fohrloop</author><score>3</score><content>Writing a personal website using the static site generator called Pelican. At the moment finalizing the templates which are written in Jinja+CSS.</content></item><item><author>Wooden_Prior1832</author><score>3</score><content>Trying to make a CLI operating system simulator from the 90&amp;apos;s with some cool sound effects and visuals, centered around an AI thing that is supposed to handle everything going on.I used pyGame for sound effects, and cool-retro-terminal for the looks.</content></item></comments></post><post><post_author>monorepo</post_author><post_id>1dtxqph</post_id><post_score>11</post_score><post_time>Wednesday, July 3, 2024 at 12:50:07 AM GMT+3</post_time><flair_text>Official PyCon</flair_text><post_title>PyCon US 2024 | All recorded content now available!</post_title><media /><post_content>Official PyCon</post_content><comments /></post><post><post_author>AutoModerator</post_author><post_id>1doks2x</post_id><post_score>3</post_score><post_time>Wednesday, June 26, 2024 at 3:00:07 AM GMT+3</post_time><flair_text>Daily Thread</flair_text><post_title>Wednesday Daily Thread: Beginner questions</post_title><media /><post_content>Daily Thread</post_content><comments><item><author>brennancurrier</author><score>3</score><content>Which UI library should I learn for general desktop apps/tools. Preferably a modern looking one with a lot of control types</content><replies><item><author>Ok-Frosting7364</author><score>5</score><content>PyQT is very popular and worth learning.Textual is great for user interface apps you can run from the command-line. I made an app in it recently.</content></item><item><author>jer_re_code</author><score>3</score><content /></item></replies></item><item><author>odett1102</author><score>1</score><content /><replies><item><author>ARRgentum</author><score>2</score><content /></item></replies></item><item><author>MathematicianRude467</author><score>1</score><content>Are there any places that you can go to have a professional look over your code. Like more in the sense of code optimization and security rather than trying to fix bugs. The one place I can think of is Fiverr but that place always seems to be hit or miss so I&amp;apos;d like to look for something more reliable.</content></item><item><author>duriani</author><score>1</score><content>I got the error for this code yesterday. (it was about &amp;quot;sum&amp;quot; fuction)But suddenly it works well.I am using co lab. Is it possible??test_list = [1, 2, 3]print(sum(test_list))</content></item><item><author>Junior-Meringue-8745</author><score>1</score><content>I want to start over with my python installation. I installed libraries globally and fucked up my sys (sys.path.append(&amp;quot;..&amp;quot;)). Some of my libraries and dependencies aren&amp;apos;t working now.Someone told me to use virtual enviroments and git, what are these and how do I implement them?</content></item><item><author>jealousjockey</author><score>1</score><content>I get Èinvalid syntaxÈ whenever i try to download midiutil using piphow do i fix itÉ i have python installed which automatically installed pip.</content><replies><item><author>jer_re_code</author><score>2</score><content>can you provide either a full screenshot or the text of the error msgand please also guve some context about your python version and pip version because they could be at the wrong version wich you can take a look at via the commands:python -Vpip -Vif you are using your python on a non unusual device please also give context on how tht is realised and on what devicePip syntaxpip install …# install a package (…)</content></item></replies></item></comments></post><post><post_author>glucoseisasuga</post_author><post_id>1dt95io</post_id><post_score>257</post_score><post_time>Tuesday, July 2, 2024 at 3:54:44 AM GMT+3</post_time><flair_text>Discussion</flair_text><post_title>What are your "wish I hadn't met you" packages?</post_title><media /><post_content>Earlier in the sub, I saw a post about packages or modules that Python users and developers were glad to have used and are now in their toolkit.
But how about the opposite? What are packages that you like what it achieves but you struggle with syntactically or in terms of end goal? Maybe other developers on the sub can provide alternatives and suggestions?</post_content><comments><item><author>sphen_lee</author><score>235</score><content>CeleryA lot of code and a lot of behind the scenes magic. Abstracts away from the message broker which makes it really hard to use the broker&amp;apos;s own observability and monitoring tooling.Wish I had directly used RabbitMQ with pika.</content><replies><item><author>pirsab</author><score>45</score><content>I was about to learn this the hard way.</content></item><item><author>germanpickles</author><score>14</score><content>I loved using rq for this use case when using redis</content><replies><item><author>sphen_lee</author><score>12</score><content>I investigated rq too. Redis isn&amp;apos;t the best message broker, but if it&amp;apos;s already in your tech stack it can be a good option.Rabbitmq is better if you need a heavy duty broker, but it&amp;apos;s more complex to use and operate. It might be overkill depending on the use case.</content></item><item><author>Smallpaul</author><score>3</score><content>We had a lot of problems with jobs getting mysteriously stuck with RQ.</content></item></replies></item><item><author>No-Dimension-3378</author><score>13</score><content>Celery has been a nightmare for me. Such a black box sometimes</content><replies><item><author>NINTSKARI</author><score>4</score><content /></item></replies></item><item><author>francohab</author><score>2</score><content /></item><item><author>romu006</author><score>2</score><content /></item><item><author>phlummox</author><score>2</score><content /></item><item><author>CeeMX</author><score>1</score><content /></item></replies></item><item><author>siowy</author><score>93</score><content /><replies><item><author>PurepointDog</author><score>26</score><content /></item></replies></item><item><author>serjester4</author><score>253</score><content>Llangchain. A garbage heap of a codebase that makes you jump through 5 abstractions to do the simplest thing. They litterly created a class for prompts that’s a wrapper on an f-string.</content><replies><item><author>wergot</author><score>29</score><content>Starting to feel this way about llamaindex as well.I can do chunking and hit the embeddings API just fine and get exactly the behavior I actually want without wading through their shitAlso all the hype new vector databases like chroma seem kinda useless. There are extensions to postgres to get vector types, distance and cosine angle.</content></item><item><author>GhazanfarJ</author><score>21</score><content>Those prompt templates are exactly why I couldn&amp;apos;t jump on the bandwagon.</content></item></replies></item><item><author>portalfan267</author><score>59</score><content>Serial, not pyserial, Serial.</content></item><item><author>EternityForest</author><score>36</score><content>GStreamer is the big one. I love it. There&amp;apos;s basically nothing like it.  But when it goes wrong it can be hard to debug, and sometimes you have to do hacky nonsense to make it do what you want.Like, my app detects what virtualenv it&amp;apos;s running from, and adds a symlink to the global package, because you cannot install it with Pip, and system-site-packages is not ideal.</content></item><item><author>PurepointDog</author><score>34</score><content>Streamlit. NiceGUI or Dash are far nicer to work with, and support &amp;quot;normal&amp;quot; programming (instead of the &amp;quot;full re-execution on load&amp;quot; thing that Streamlit does). I didn&amp;apos;t find out about them though bc Streamlit was &amp;quot;good enough&amp;quot;</content></item></comments></post><post><post_author>Krukerfluk</post_author><post_id>hoolsm</post_id><post_score>9236</post_score><post_time>Friday, July 10, 2020 at 4:06:13 PM GMT+3</post_time><flair_text>I Made This</flair_text><post_title>This post has:</post_title><media /><post_content>9777 upvotes,
967 downvotes
and 452 comments!</post_content><comments><item><author>[deleted]</author><score>1319</score><content>scale tap piquant quiet advise salt languid abundant dolls long -- mass edited with redact.dev</content><replies><item><author>Krukerfluk</author><score>486</score><content>yep</content></item></replies></item><item><author>SpontaneousAge</author><score>406</score><content>Good job. But honestly, add a sleep timer of a few seconds. This will eventually get your IP banned on reddit if you bombard them with too many requests.</content><replies><item><author>throwaway_the_fourth</author><score>165</score><content>The API wrapper (PRAW) takes care of that. No need to add additional sleeps.</content></item></replies></item><item><author>[deleted]</author><score>115</score><content>Cool! Could you share it?</content></item></comments></post><post><post_author>_dodo-</post_author><post_id>1dsyi19</post_id><post_score>478</post_score><post_time>Monday, July 1, 2024 at 8:18:01 PM GMT+3</post_time><flair_text>Discussion</flair_text><post_title>What are your "glad to have met you" packages?</post_title><media /><post_content>What are packages or Python projects that you can no longer do without? Programs, applications, libraries or modules that have had a lasting impact on how you develop with Python.
For me personally, for example, pathlib would be a module that I wouldn't want to work without. Object-oriented path objects make so much more sense than fiddling around with strings.</post_content><comments><item><author>not_sane</author><score>412</score><content>tqdm is very nice for showing progress bars.</content><replies><item><author>wwwTommy</author><score>65</score><content>Look at pqdm if you want to run stuff easily in parallel.</content><replies><item><author>fmillion</author><score>24</score><content>Rich has REALLY nice progress bars (and tons of other console &amp;quot;beautification&amp;quot; functions)...but not sure if it also does parallelizing on its own. Might have to look into that...</content><replies><item><author>je-suis-une-pommes</author><score>10</score><content>Tqdm has rich enabled progress bars under tqdm.rich</content></item></replies></item><item><author>sohang-3112</author><score>1</score><content>TIL - that looks quite useful!!</content></item></replies></item><item><author>hypnotic_cuddlefish</author><score>45</score><content>I recently discovered enlighten and it is my new tqdm replacement.</content></item></replies></item><item><author>houseofleft</author><score>82</score><content>Rich is an absolute go to for me just for simple CLIs. Having access to color, formatting, emojis etc in an easy way is great.</content></item><item><author>diag</author><score>77</score><content>pathlib was such a game changer for me just in general.more_itertools to get some awesome utilities for iterables.python_Levenshtein for some essoteric string comparisons. questionary helps making quick cli utilities so easy.</content></item><item><author>Lewistrick</author><score>155</score><content>I can&amp;apos;t live without ruff any more.Honorable mentions: pathlib, pandas, Pydantic, FastAPI.</content></item><item><author>Ripolak</author><score>32</score><content>rich. 47k stars yet most Python devs I know haven&amp;apos;t heard of it. It&amp;apos;s a really great tool for anything CLI related and can make showing things in the terminal to the next level.</content></item><item><author>hypnotic_cuddlefish</author><score>115</score><content>pathlib black click pytest</content></item><item><author>gagarin_kid</author><score>27</score><content>I would like to add shapely to the list</content></item><item><author>py_user</author><score>68</score><content>loguru</content></item></comments></post><post><post_author>I_will_delete_myself</post_author><post_id>1dtnr96</post_id><post_score>8</post_score><post_time>Tuesday, July 2, 2024 at 5:52:50 PM GMT+3</post_time><flair_text>Discussion</flair_text><post_title>Would you say Piccolo ORM is production ready in 2024?</post_title><media /><post_content>I have to build a backend in python and want to try something new. I was thinking of trying Piccolo for prototyping the DB since it looks simpler than SQLAlchemy (although SQLAlchemy is more proven) and either keeping it or converting the code into sql statements before production.
However, would you say Piccolo ORM is production ready in 2024 beyond hobby projects or prototyping? Maintainer is still updating the repo so the commitment is impressive and its seems simple with async out of the box.</post_content><comments><item><author>shinitakunai</author><score>3</score><content>To this day I still love peewee, what does piccolo offers over it?</content><replies><item><author>I_will_delete_myself</author><score>1</score><content>It just has appealing features for me like a admin, baked in migrations available, etc...</content></item></replies></item><item><author>dAnjou</author><score>6</score><content>Define &amp;quot;production ready&amp;quot; please :)</content><replies><item><author>I_will_delete_myself</author><score>4</score><content>Something you would feel comfortable with your company running for their business without needing to worry about breaking bugs.</content></item></replies></item><item><author>Ra1nb0wM0nk3y</author><score>2</score><content>It already has a solid feature set, regular updates and a really nice admin interface.Unless you&amp;apos;re using a production database that is not Postgres or CockroachDB.</content></item><item><author>[deleted]</author><score /><content>Sure, but is Piccolo ORM production ready?</content><replies><item><author>yrubooingmeimryte</author><score>4</score><content>Sure, but is Piccolo ORM production ready?</content></item><item><author>I_will_delete_myself</author><score>3</score><content>That was the plan though. First prototype all the database stuff using an ORM. Then because I done a DAL for production I can use normal postgres. I am just curious if Piccolo is production ready so I can increase speed to market.</content></item><item><author>outceptionator</author><score>3</score><content>What a fun little story...</content></item></replies></item></comments></post><post><post_author>wilson_wilson_wilson</post_author><post_id>1dtzb9f</post_id><post_score>1</post_score><post_time>Wednesday, July 3, 2024 at 2:00:41 AM GMT+3</post_time><flair_text>Discussion</flair_text><post_title>Caught between Reflex and the traditional approach (Django/Next.js)</post_title><media /><post_content>Relatively new to development.
I am working on a simple chat bot for people with ADHD. I have the basics working in pure python.
I messed around with almost every full stack framework so far.
I recently found Reflex but the down side is it's kinda new, not a whole lot or resources out there and AIs don't have a lot of context to help.
I love the idea of full stack python but I want to get into WebXR dev soon anyway so I'm think I just bite the bullet and learn JS and just do a Django backend?
Or full send learn Next.js for front and back??
Looking for advice from anybody who's been here.</post_content><comments /></post><post><post_author>AutoModerator</post_author><post_id>1dmzzup</post_id><post_score>13</post_score><post_time>Monday, June 24, 2024 at 3:00:08 AM GMT+3</post_time><flair_text>Daily Thread</flair_text><post_title>Monday Daily Thread: Project ideas!</post_title><media /><post_content>Daily Thread</post_content><comments><item><author>InterestingBig5702</author><score>-2</score><content /></item></comments></post><post><post_author>Itwist101</post_author><post_id>gn9add</post_id><post_score>5722</post_score><post_time>Wednesday, May 20, 2020 at 1:58:14 PM GMT+3</post_time><flair_text /><post_title>Drawing Mona Lisa with 256 circles using evolution [Github repo in comments]</post_title><media /><post_content /><comments><item><author>Itwist101</author><score>235</score><content>[Github] https://github.com/ahmedkhalf/Circle-EvolutionPlease note that this is a very early and undocumented version. I plan on adding color, and improving speed, then later putting it on PyPI. Push requests are appreciated :)</content><replies><item><author>1fobofobi</author><score>8</score><content>Use floyd-warshall algorithm bro. It will be really fast.</content></item><item><author>dl__</author><score>4</score><content>Shouldn&amp;apos;t you move this render:https://github.com/ahmedkhalf/Circle-Evolution/blob/master/circle_evolution/evolution.py#L75....outside the loop? Each time you loop there is only one image created and so only one render is required.It may result in a small speedup.</content><replies><item><author>Itwist101</author><score>2</score><content>Yea you&amp;apos;re right. Gonna do that next.</content></item></replies></item></replies></item><item><author>ColdFire75</author><score>207</score><content /><replies><item><author>Itwist101</author><score>51</score><content /></item></replies></item><item><author>Symbiotaxiplasm</author><score>97</score><content>Love that the solver couldn&amp;apos;t figure out Mona Lisa&amp;apos;s smile either</content></item><item><author>oyster_brain</author><score>28</score><content>Fun project! Congrats! I didn&amp;apos;t read the code, yet I&amp;apos;m wondering: what kind of compression rate do you achieve?</content></item></comments></post><post><post_author>N7nes_</post_author><post_id>1dttfu5</post_id><post_score>0</post_score><post_time>Tuesday, July 2, 2024 at 9:47:32 PM GMT+3</post_time><flair_text>Discussion</flair_text><post_title>Feasibility of Transpiling Python to Svelte with Kivy for Web, Desktop, and Mobile Apps</post_title><media /><post_content>Would it be feasible to develop a project that transpiles Python components into Svelte components, handles events by making backend requests that return JavaScript code for dynamic component updates, and also compiles the project for Kivy to support desktop and mobile applications? The components will be web-based, and customization will be done using CSS style.</post_content><comments><item><author>riklaunim</author><score>3</score><content>Wrappers / generators tend to have limitations. IMHO it&amp;apos;s better to look at PyScript and create a native SPA framework. And that&amp;apos;s for webdev. Kivy has it kv files and styling and different needs (and mobile on Python is limited too).</content><replies><item><author>N7nes_</author><score>1</score><content>To achieve maximum performance, I would transpile the components to Svelte, and event functions would be transpiled using Transcrypt instead of running a Python interpreter in the browser. Regarding the use of Kivy, I would not generate .kv files. Component programming would be done directly in Python, where, for example, a &amp;lt;div&amp;gt; would be converted into a BoxLayout directly within the component.</content></item></replies></item></comments></post><post><post_author>atqm-</post_author><post_id>hqc7ol</post_id><post_score>5691</post_score><post_time>Monday, July 13, 2020 at 12:27:37 PM GMT+3</post_time><flair_text /><post_title>I made a simulation using Python in which a neural network learns to race</post_title><media /><post_content /><comments><item><author>DmitryBalabka</author><score>297</score><content>It would be great to show an animation example of how the trained model performs on an unseen track.</content><replies><item><author>atqm-</author><score>121</score><content>It would be! Thank you for the idea :)</content><replies><item><author>POTUS</author><score>153</score><content>You might want to train on randomly generated tracks. There’s a fair chance that you’ve trained these bots to ignore all input and instead turn left for a fixed period of time and then turn right. It’s called overfitting your model. That would be a good way to find the most efficient path through one individual track, but that’s probably not what you’re going for.</content><replies><item><author>b10011</author><score>36</score><content>It&amp;apos;s highly likely that the neural network does not take time into account (doesn&amp;apos;t have access to it). But overfitting could happen, because it might learn the specific distances at specific turns that wouldn&amp;apos;t appear on another track.</content></item><item><author>[deleted]</author><score>7</score><content>Dang, beat me to it. My first thought was: What information does the model have access to?</content></item></replies></item></replies></item></replies></item><item><author>atqm-</author><score>108</score><content>Longer version on YoutubeTools:pyglet for graphicsnumpy for nnEDIT:Thank you guys for all the feedback! This is my first bigger programming project and I&amp;apos;m glad you like it.There is a lot of source code requests and I am currently working on it. My code is a mess because I never really thought I would share this project with someone. Its also written in czech :D When I&amp;apos;m done, I&amp;apos;ll make another post.To train the NN I used a simple evolutionary algorithm. Best (fastest) cars in each generation are chosen to be parents of next slightly mutated generation. The NN has 2 hidden layers (5x4x4x2)</content><replies><item><author>Sauwan</author><score>49</score><content /></item></replies></item><item><author>[deleted]</author><score>40</score><content>Is it on github where we could look at your code in awe?</content></item></comments></post><post><post_author>Nekose</post_author><post_id>ghxqod</post_id><post_score>5543</post_score><post_time>Tuesday, May 12, 2020 at 1:14:39 AM GMT+3</post_time><flair_text>I Made This</flair_text><post_title>Thanks to everyone’s advice, my mouse drawing algorithm has gotten much better and faster!</post_title><media /><post_content /><comments><item><author>TheBlackCat13</author><score>1264</score><content>I hate to break it to you but that looks nothing like a mouse.</content><replies><item><author>shark098</author><score>270</score><content /></item></replies></item><item><author>Nekose</author><score>298</score><content /></item><item><author>Maruaz</author><score>208</score><content>Cries in ‘Hello World’</content></item><item><author>SushiWithoutSushi</author><score>47</score><content>Wow! Looks incredible!How did you bypass the speed limitations that you commented in the last post?</content></item></comments></post><post><post_author>Sebaron</post_author><post_id>hpr28u</post_id><post_score>4958</post_score><post_time>Sunday, July 12, 2020 at 11:29:10 AM GMT+3</post_time><flair_text>I Made This</flair_text><post_title>I am a medical student, and I recently programmed an open-source eye-tracker for brain research</post_title><media /><post_content /><comments><item><author>Sebaron</author><score>242</score><content>To investigate how the brain uses visual information, I developed an open-source eye-tracker that runs well on consumer-grade hardware. I wrote this software in Python and aimed to design it modularly to encourage customisations. Feedback is welcome!Here is the repo: https://github.com/simonarvin/eyeloopThis can be used to design closed-loop experiments in which the eyes affect the system, and the system affects the eyes. If interested in the neuro-scientific aspect, here&amp;apos;s our preprint:Preprint: https://www.biorxiv.org/content/10.1101/2020.07.03.186387v1Our lab: http://www.yoneharalab.com</content><replies><item><author>Propeus</author><score>191</score><content /></item></replies></item><item><author>[deleted]</author><score>138</score><content /><replies><item><author>[deleted]</author><score>82</score><content /></item></replies></item><item><author>the_holger</author><score>90</score><content>Hey!Some things I noticed about your repo:1.) Your install instructions ask people to clone the whole repo. That&amp;apos;s not really necessary, as &amp;quot;end users&amp;quot; won&amp;apos;t have any use for the whole git history.2.) The examples (both example and misc folder) that are being downloaded are about 270MB in size, compared to 351kb of actual code that&amp;apos;s just wasteful. I&amp;apos;d make that an optional download for people wanting/needing that3.) I&amp;apos;d add __pycache__ to the gitignore fileCheers! :)</content></item></comments></post></posts>