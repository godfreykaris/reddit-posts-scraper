[
{
    "post_author": "Douglas_Blackwood",
    "post_id": "1dvsqk7",
    "post_score": "28",
    "post_time": "Friday, July 5, 2024 at 11:02:19 AM GMT+3",
    "flair_text": "Showcase",
    "post_title": "sql-compare: package to compare SQL schemas",
    "media": [
        "https://github.com/Mergifyio/sql-compare",
        "https://alembic.sqlalchemy.org/en/latest/api/autogenerate.html?ref=blog.mergify.com#getting-diffs",
        "https://blog.mergify.com/ensuring-seamless-sql-migrations-in-production/",
        "https://github.com/djrobstep/migra",
        "https://pypi.org/project/sql-compare/",
        "https://alembic.sqlalchemy.org/en/latest/autogenerate.html?ref=blog.mergify.com#what-does-autogenerate-detect-and-what-does-it-not-detect"
    ],
    "post_content": "What My Project Does\nThis package allows to compare two SQL files (or strings) to know whether their statements are the same or not. The comparison doesn't care about the order of the columns in a table or the order of the values in an enumerator. It also excludes irrelevant data like comments.\nGitHub repository\nPyPI\nIts main usage is to compare the schemas of two databases (e.g. staging and production).\nAt Mergify, we use it in our test suite to check that the migration scripts generated by Alembic will create the database schema expected by the SQLAlchemy models. I wrote a blog post about the creation of the package.\nTarget Audience\nWe use it in our CI/CD. This package is meant for testing mainly, but it could be used for something else probably.",
    "comments": [
        {
            "author": "ExternalUserError",
            "score": "3",
            "content": "Nice. A long time ago, I wrote a little script that dumped the schemas of two databases then just did a regular diff. This was before we had fancy-pants \"migrations.\" But stuff still gets lost in migrations, especially when a migration goes south and there's some manual intervention. I might give this a try. Does it do anything clever in terms of matching up constraints, nested rules, triggers, etc?",
            "replies": [
                {
                    "author": "Douglas_Blackwood",
                    "score": "1",
                    "content": "The only clever thing is sorting columns and enum values when comparing. What do you have in mind about matching up constraints, rules, and triggers? Do you think of any specific use case?"
                }
            ]
        },
        {
            "author": "Ok-Frosting7364",
            "score": "1",
            "content": "Your GitHub repo link is dead",
            "replies": [
                {
                    "author": "Douglas_Blackwood",
                    "score": "2",
                    "content": "Oops, I had to change the repository visibility... Done, thanks!"
                },
                {
                    "author": "Douglas_Blackwood",
                    "score": "1",
                    "content": "Which link? https://github.com/Mergifyio/sql-compare works for me. Do you get a 404?"
                }
            ]
        }
    ]
},
{
    "post_author": "AutoModerator",
    "post_id": "1dx3ae2",
    "post_score": "5",
    "post_time": "Sunday, July 7, 2024 at 3:00:08 AM GMT+3",
    "flair_text": "Daily Thread",
    "post_title": "Sunday Daily Thread: What's everyone working on this week?",
    "media": [],
    "post_content": "Daily Thread",
    "comments": [
        {
            "author": "t0xic0der",
            "score": "4",
            "content": "I am working on Expedite (Ref. https://github.com/gridhead/expedite and http://pypi.org/project/expedite), a simple encrypted file transfer service that allows for people to share synchronously assets among each other without having to rely on third-party services or feeling the need of having publicly visible IP addresses. The project is still in its early phases - So any help to improve my craft is welcome! <3"
        },
        {
            "author": "_ORL0K_",
            "score": "3",
            "content": "operator training simulation. starts originally in excel VBA, 3 years later - good performance in python with tkinter UI. Faceplate test on youtube"
        },
        {
            "author": "__shrubbery__",
            "score": "2",
            "content": "I spent the last month working on v0.2 of qtile-bonsai - a tmux++ esque layout for the qtile window manager. It now has everything I need for my own usage, so I want to deem it complete software (barring bug filings and requests). As my last task for it, I'm trying to publish it to the AUR. Trying to figure out the nuances of using a modern package manager such as pdm and how to use it in the context of a PKGBUILD. My working plan is to download python-pdm as a make-dependency and use it as usual. Traditional arch-packaged python software seems to be using 'plainer' tools such as python-build and python-installer. Trying to figure out some nuances around global install and ensuring my package's own python dependencies are handled properly in the PKGBUILD env."
        },
        {
            "author": "TequilaJosh",
            "score": "1",
            "content": "Iâ€™m currently working on an application that will let users add in craft items and projects they make with those items. It willthem go back and see when say they used so they may replicate past projects and track expenses and calculate costs"
        },
        {
            "author": "Oddball777",
            "score": "1",
            "content": "Working on GraphingLib (www.graphinglib.org), an alternative to matplotlib where data analysis is included in plottable objects and where the API is generally more user friendly and and leads to cleaner code"
        },
        {
            "author": "No_Celebration_9350",
            "score": "1",
            "content": "I am working on this program that can host servers on a terminal. The thing is what your hosting is a program, program inside a program. Its like remaking the web! I can't describe it well. this new programing language its running is called \"scrape file extension language\", \"SFEL\" for short. if your wondering what scrape is its the program I am making. Here's some sample code for SFEL: Fuction examples: set(a,10); output(string or var); console.newpage[a]{ } pass(); console.register(addr,role,value); console.share(addr); console.connect(addr,port); change.password(str); console.startpage(name); Var key examples: normal var: *a* console register value: *cr[var]* address: addr I know it might look wrong but I am trying."
        },
        {
            "author": "OiledUpThug",
            "score": "1",
            "content": "https://pastebin.com/RZBjAFPR made a bad password interface. I'm sure it's obvious, but I am new to python"
        },
        {
            "author": "Pineapple_Pizza_Nah",
            "score": "1",
            "content": "I am early doors into coding, recently just been testing out a few little tasks, recently I wrote some code to read a .txt file of my games with how long it takes to beat them and then output's the next game I should play based on the lowest time to beat. I had alot of help and got stuck alot but I had fun doing it so I hope to keep learning and work on more. I am tempted to recreate it in a more basic way to allow me to better understand the code."
        }
    ]
}
]